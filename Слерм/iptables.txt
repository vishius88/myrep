Общий синтаксис
bash
Копировать
Редактировать
iptables [-t таблица] команда цепочка [условия] -j действие
-t таблица — таблица (по умолчанию filter). Варианты: filter, nat, mangle, raw.

команда — что делаем:

-A (append) — добавить правило в конец цепочки

-I (insert) — вставить правило в цепочку в указанную позицию

-D (delete) — удалить правило по номеру или совпадению

-L (list) — показать правила

-F (flush) — очистить все правила

-X — удалить пользовательские цепочки

-P (policy) — задать политику по умолчанию

цепочка — одна из цепочек:

INPUT — входящий трафик на локальную машину

OUTPUT — исходящий трафик с локальной машины

FORWARD — транзитный трафик через машину (маршрутизация)

В таблице nat есть цепочки: PREROUTING, POSTROUTING, OUTPUT

[условия] — фильтры по пакету, например:

-p протокол — протокол (tcp, udp, icmp)

--dport порт — порт назначения (для tcp/udp)

--sport порт — порт источника

-s адрес — IP источник (можно диапазон или подсеть)

-d адрес — IP назначения

-i интерфейс — входящий интерфейс

-o интерфейс — исходящий интерфейс

-j действие — действие над пакетом:

ACCEPT — пропустить

DROP — отбросить

REJECT — отбросить с сообщением

LOG — записать в лог

DNAT — изменить адрес назначения (для nat)

SNAT — изменить адрес источника (для nat)

MASQUERADE — маскарадинг (динамический SNAT)





Вопросы по iptables для собеседования
Что такое iptables и какую роль он играет в Linux?

Какие таблицы и цепочки существуют в iptables? Чем они отличаются?

Каковы основные действия (targets) в iptables? Что делает ACCEPT, DROP, REJECT?

Чем отличаются политики по умолчанию (default policy) и правила в цепочке?

Как посмотреть все текущие правила iptables?

Как добавить правило, которое разрешает входящие SSH подключения?

Как запретить весь входящий трафик, кроме определённого порта?

Что такое NAT и какие таблицы iptables с ним связаны?

Как сделать проброс порта с внешнего интерфейса на внутренний сервер?

Чем отличаются цепочки PREROUTING, POSTROUTING и FORWARD?

Что такое MASQUERADE и когда его использовать?

Как логировать отброшенные пакеты?

Как удалить правило из iptables?

Как сохранить правила iptables, чтобы они сохранялись после перезагрузки?

Какие существуют альтернативы iptables и почему они появились?


Вот краткие ответы на каждый из вопросов по `iptables`, чтобы быть готовым к собеседованию:

---

### 1. Что такое iptables и какую роль он играет в Linux?

`iptables` — это утилита для настройки фильтрации сетевого трафика в ядре Linux (через Netfilter). Позволяет создавать правила для контроля входящего, исходящего и транзитного трафика.

---

### 2. Какие таблицы и цепочки существуют в iptables? Чем они отличаются?

* Таблицы:

  * `filter` — основная таблица для фильтрации пакетов (по умолчанию).
  * `nat` — для трансляции адресов (SNAT, DNAT).
  * `mangle` — для модификации пакетов (изменение TTL, QoS).
  * `raw` — для исключения пакетов из трекинга соединений.
* Цепочки:

  * `INPUT` — для входящего трафика к локальному хосту.
  * `OUTPUT` — для исходящего трафика с локального хоста.
  * `FORWARD` — для транзитного трафика через хост (роутинг).
  * В таблице `nat` есть цепочки `PREROUTING`, `POSTROUTING`, `OUTPUT`.

---

### 3. Каковы основные действия (targets) в iptables? Что делает ACCEPT, DROP, REJECT?

* `ACCEPT` — разрешить пакет.
* `DROP` — отбросить пакет без уведомления отправителя.
* `REJECT` — отбросить пакет и отправить уведомление отправителю.
* Другие: `LOG` (логирование), `SNAT`, `DNAT`, `MASQUERADE` и т.д.

---

### 4. Чем отличаются политики по умолчанию (default policy) и правила в цепочке?

Политика по умолчанию — действие, применяемое к пакету, если ни одно правило цепочки не подошло. Правила проверяются по порядку, если совпадения нет — действует политика.

---

### 5. Как посмотреть все текущие правила iptables?

```bash
iptables -L -v -n
```

---

### 6. Как добавить правило, которое разрешает входящие SSH подключения?

```bash
iptables -A INPUT -p tcp --dport 22 -j ACCEPT
```

---

### 7. Как запретить весь входящий трафик, кроме определённого порта?

* Сначала разрешить нужный порт, например 22:

```bash
iptables -A INPUT -p tcp --dport 22 -j ACCEPT
```

* Затем установить политику DROP по умолчанию:

```bash
iptables -P INPUT DROP
```

---

### 8. Что такое NAT и какие таблицы iptables с ним связаны?

NAT (Network Address Translation) — трансляция адресов и портов. Используется для изменения IP-адресов пакетов. В iptables с NAT работает таблица `nat`.

---

### 9. Как сделать проброс порта с внешнего интерфейса на внутренний сервер?

```bash
iptables -t nat -A PREROUTING -p tcp --dport 80 -j DNAT --to-destination 192.168.1.10:80
```

---

### 10. Чем отличаются цепочки PREROUTING, POSTROUTING и FORWARD?

* `PREROUTING` — обрабатывает пакеты при входе до маршрутизации.
* `POSTROUTING` — обрабатывает пакеты при выходе после маршрутизации.
* `FORWARD` — обрабатывает пакеты, которые проходят через хост (маршрутизация).

---

### 11. Что такое MASQUERADE и когда его использовать?

`MASQUERADE` — динамический SNAT, который меняет исходящий IP на IP интерфейса. Используется для выхода в интернет с динамическим IP.

---

### 12. Как логировать отброшенные пакеты?

```bash
iptables -A INPUT -j LOG --log-prefix "IPTABLES DROP: " --log-level 4
```

---

### 13. Как удалить правило из iptables?

* По номеру:

```bash
iptables -D INPUT 3
```

* По совпадению:

```bash
iptables -D INPUT -p tcp --dport 22 -j ACCEPT
```

---

### 14. Как сохранить правила iptables, чтобы они сохранялись после перезагрузки?

* Использовать `iptables-save` и `iptables-restore`:

```bash
iptables-save > /etc/iptables/rules.v4
```

* Или использовать системные сервисы: `netfilter-persistent` или `firewalld`.

---

### 15. Какие существуют альтернативы iptables и почему они появились?

* `nftables` — современный заменитель iptables, объединяет все таблицы и цепочки в единый фреймворк с более простой и мощной конфигурацией.
* `firewalld` — фронтенд для iptables/nftables с динамической конфигурацией.
* Они появились для упрощения управления и повышения производительности.

---

Если хочешь — могу помочь с углублёнными ответами или примерами!
